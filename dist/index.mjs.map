{"version":3,"file":"index.mjs","sources":["../node_modules/react-simple-code-editor/lib/index.js","../src/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n/* global global */\n\nvar KEYCODE_ENTER = 13;\nvar KEYCODE_TAB = 9;\nvar KEYCODE_BACKSPACE = 8;\nvar KEYCODE_Y = 89;\nvar KEYCODE_Z = 90;\nvar KEYCODE_M = 77;\nvar KEYCODE_PARENS = 57;\nvar KEYCODE_BRACKETS = 219;\nvar KEYCODE_QUOTE = 222;\nvar KEYCODE_BACK_QUOTE = 192;\n\nvar HISTORY_LIMIT = 100;\nvar HISTORY_TIME_GAP = 3000;\n\nvar isWindows = 'navigator' in global && /Win/i.test(navigator.platform);\nvar isMacLike = 'navigator' in global && /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n\nvar className = 'npm__react-simple-code-editor__textarea';\n\nvar cssText = /* CSS */'\\n/**\\n * Reset the text fill color so that placeholder is visible\\n */\\n.' + className + ':empty {\\n  -webkit-text-fill-color: inherit !important;\\n}\\n\\n/**\\n * Hack to apply on some CSS on IE10 and IE11\\n */\\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\\n  /**\\n    * IE doesn\\'t support \\'-webkit-text-fill-color\\'\\n    * So we use \\'color: transparent\\' to make the text transparent on IE\\n    * Unlike other browsers, it doesn\\'t affect caret color in IE\\n    */\\n  .' + className + ' {\\n    color: transparent !important;\\n  }\\n\\n  .' + className + '::selection {\\n    background-color: #accef7 !important;\\n    color: transparent !important;\\n  }\\n}\\n';\n\nvar Editor = function (_React$Component) {\n  _inherits(Editor, _React$Component);\n\n  function Editor() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Editor);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Editor.__proto__ || Object.getPrototypeOf(Editor)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      capture: true\n    }, _this._recordCurrentState = function () {\n      var input = _this._input;\n\n      if (!input) return;\n\n      // Save current state of the input\n      var value = input.value,\n          selectionStart = input.selectionStart,\n          selectionEnd = input.selectionEnd;\n\n\n      _this._recordChange({\n        value: value,\n        selectionStart: selectionStart,\n        selectionEnd: selectionEnd\n      });\n    }, _this._getLines = function (text, position) {\n      return text.substring(0, position).split('\\n');\n    }, _this._recordChange = function (record) {\n      var overwrite = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var _this$_history = _this._history,\n          stack = _this$_history.stack,\n          offset = _this$_history.offset;\n\n\n      if (stack.length && offset > -1) {\n        // When something updates, drop the redo operations\n        _this._history.stack = stack.slice(0, offset + 1);\n\n        // Limit the number of operations to 100\n        var count = _this._history.stack.length;\n\n        if (count > HISTORY_LIMIT) {\n          var extras = count - HISTORY_LIMIT;\n\n          _this._history.stack = stack.slice(extras, count);\n          _this._history.offset = Math.max(_this._history.offset - extras, 0);\n        }\n      }\n\n      var timestamp = Date.now();\n\n      if (overwrite) {\n        var last = _this._history.stack[_this._history.offset];\n\n        if (last && timestamp - last.timestamp < HISTORY_TIME_GAP) {\n          // A previous entry exists and was in short interval\n\n          // Match the last word in the line\n          var re = /[^a-z0-9]([a-z0-9]+)$/i;\n\n          // Get the previous line\n          var previous = _this._getLines(last.value, last.selectionStart).pop().match(re);\n\n          // Get the current line\n          var current = _this._getLines(record.value, record.selectionStart).pop().match(re);\n\n          if (previous && current && current[1].startsWith(previous[1])) {\n            // The last word of the previous line and current line match\n            // Overwrite previous entry so that undo will remove whole word\n            _this._history.stack[_this._history.offset] = _extends({}, record, { timestamp: timestamp });\n\n            return;\n          }\n        }\n      }\n\n      // Add the new operation to the stack\n      _this._history.stack.push(_extends({}, record, { timestamp: timestamp }));\n      _this._history.offset++;\n    }, _this._updateInput = function (record) {\n      var input = _this._input;\n\n      if (!input) return;\n\n      // Update values and selection state\n      input.value = record.value;\n      input.selectionStart = record.selectionStart;\n      input.selectionEnd = record.selectionEnd;\n\n      _this.props.onValueChange(record.value);\n    }, _this._applyEdits = function (record) {\n      // Save last selection state\n      var input = _this._input;\n      var last = _this._history.stack[_this._history.offset];\n\n      if (last && input) {\n        _this._history.stack[_this._history.offset] = _extends({}, last, {\n          selectionStart: input.selectionStart,\n          selectionEnd: input.selectionEnd\n        });\n      }\n\n      // Save the changes\n      _this._recordChange(record);\n      _this._updateInput(record);\n    }, _this._undoEdit = function () {\n      var _this$_history2 = _this._history,\n          stack = _this$_history2.stack,\n          offset = _this$_history2.offset;\n\n      // Get the previous edit\n\n      var record = stack[offset - 1];\n\n      if (record) {\n        // Apply the changes and update the offset\n        _this._updateInput(record);\n        _this._history.offset = Math.max(offset - 1, 0);\n      }\n    }, _this._redoEdit = function () {\n      var _this$_history3 = _this._history,\n          stack = _this$_history3.stack,\n          offset = _this$_history3.offset;\n\n      // Get the next edit\n\n      var record = stack[offset + 1];\n\n      if (record) {\n        // Apply the changes and update the offset\n        _this._updateInput(record);\n        _this._history.offset = Math.min(offset + 1, stack.length - 1);\n      }\n    }, _this._handleKeyDown = function (e) {\n      var _this$props = _this.props,\n          tabSize = _this$props.tabSize,\n          insertSpaces = _this$props.insertSpaces,\n          ignoreTabKey = _this$props.ignoreTabKey,\n          onKeyDown = _this$props.onKeyDown;\n\n\n      if (onKeyDown) {\n        onKeyDown(e);\n\n        if (e.defaultPrevented) {\n          return;\n        }\n      }\n\n      var _e$target = e.target,\n          value = _e$target.value,\n          selectionStart = _e$target.selectionStart,\n          selectionEnd = _e$target.selectionEnd;\n\n\n      var tabCharacter = (insertSpaces ? ' ' : '     ').repeat(tabSize);\n\n      if (e.keyCode === KEYCODE_TAB && !ignoreTabKey && _this.state.capture) {\n        // Prevent focus change\n        e.preventDefault();\n\n        if (e.shiftKey) {\n          // Unindent selected lines\n          var linesBeforeCaret = _this._getLines(value, selectionStart);\n          var startLine = linesBeforeCaret.length - 1;\n          var endLine = _this._getLines(value, selectionEnd).length - 1;\n          var nextValue = value.split('\\n').map(function (line, i) {\n            if (i >= startLine && i <= endLine && line.startsWith(tabCharacter)) {\n              return line.substring(tabCharacter.length);\n            }\n\n            return line;\n          }).join('\\n');\n\n          if (value !== nextValue) {\n            var startLineText = linesBeforeCaret[startLine];\n\n            _this._applyEdits({\n              value: nextValue,\n              // Move the start cursor if first line in selection was modified\n              // It was modified only if it started with a tab\n              selectionStart: startLineText.startsWith(tabCharacter) ? selectionStart - tabCharacter.length : selectionStart,\n              // Move the end cursor by total number of characters removed\n              selectionEnd: selectionEnd - (value.length - nextValue.length)\n            });\n          }\n        } else if (selectionStart !== selectionEnd) {\n          // Indent selected lines\n          var _linesBeforeCaret = _this._getLines(value, selectionStart);\n          var _startLine = _linesBeforeCaret.length - 1;\n          var _endLine = _this._getLines(value, selectionEnd).length - 1;\n          var _startLineText = _linesBeforeCaret[_startLine];\n\n          _this._applyEdits({\n            value: value.split('\\n').map(function (line, i) {\n              if (i >= _startLine && i <= _endLine) {\n                return tabCharacter + line;\n              }\n\n              return line;\n            }).join('\\n'),\n            // Move the start cursor by number of characters added in first line of selection\n            // Don't move it if it there was no text before cursor\n            selectionStart: /\\S/.test(_startLineText) ? selectionStart + tabCharacter.length : selectionStart,\n            // Move the end cursor by total number of characters added\n            selectionEnd: selectionEnd + tabCharacter.length * (_endLine - _startLine + 1)\n          });\n        } else {\n          var updatedSelection = selectionStart + tabCharacter.length;\n\n          _this._applyEdits({\n            // Insert tab character at caret\n            value: value.substring(0, selectionStart) + tabCharacter + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: updatedSelection,\n            selectionEnd: updatedSelection\n          });\n        }\n      } else if (e.keyCode === KEYCODE_BACKSPACE) {\n        var hasSelection = selectionStart !== selectionEnd;\n        var textBeforeCaret = value.substring(0, selectionStart);\n\n        if (textBeforeCaret.endsWith(tabCharacter) && !hasSelection) {\n          // Prevent default delete behaviour\n          e.preventDefault();\n\n          var _updatedSelection = selectionStart - tabCharacter.length;\n\n          _this._applyEdits({\n            // Remove tab character at caret\n            value: value.substring(0, selectionStart - tabCharacter.length) + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: _updatedSelection,\n            selectionEnd: _updatedSelection\n          });\n        }\n      } else if (e.keyCode === KEYCODE_ENTER) {\n        // Ignore selections\n        if (selectionStart === selectionEnd) {\n          // Get the current line\n          var line = _this._getLines(value, selectionStart).pop();\n          var matches = line.match(/^\\s+/);\n\n          if (matches && matches[0]) {\n            e.preventDefault();\n\n            // Preserve indentation on inserting a new line\n            var indent = '\\n' + matches[0];\n            var _updatedSelection2 = selectionStart + indent.length;\n\n            _this._applyEdits({\n              // Insert indentation character at caret\n              value: value.substring(0, selectionStart) + indent + value.substring(selectionEnd),\n              // Update caret position\n              selectionStart: _updatedSelection2,\n              selectionEnd: _updatedSelection2\n            });\n          }\n        }\n      } else if (e.keyCode === KEYCODE_PARENS || e.keyCode === KEYCODE_BRACKETS || e.keyCode === KEYCODE_QUOTE || e.keyCode === KEYCODE_BACK_QUOTE) {\n        var chars = void 0;\n\n        if (e.keyCode === KEYCODE_PARENS && e.shiftKey) {\n          chars = ['(', ')'];\n        } else if (e.keyCode === KEYCODE_BRACKETS) {\n          if (e.shiftKey) {\n            chars = ['{', '}'];\n          } else {\n            chars = ['[', ']'];\n          }\n        } else if (e.keyCode === KEYCODE_QUOTE) {\n          if (e.shiftKey) {\n            chars = ['\"', '\"'];\n          } else {\n            chars = [\"'\", \"'\"];\n          }\n        } else if (e.keyCode === KEYCODE_BACK_QUOTE && !e.shiftKey) {\n          chars = ['`', '`'];\n        }\n\n        // If text is selected, wrap them in the characters\n        if (selectionStart !== selectionEnd && chars) {\n          e.preventDefault();\n\n          _this._applyEdits({\n            value: value.substring(0, selectionStart) + chars[0] + value.substring(selectionStart, selectionEnd) + chars[1] + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: selectionStart,\n            selectionEnd: selectionEnd + 2\n          });\n        }\n      } else if ((isMacLike ? // Trigger undo with ⌘+Z on Mac\n      e.metaKey && e.keyCode === KEYCODE_Z : // Trigger undo with Ctrl+Z on other platforms\n      e.ctrlKey && e.keyCode === KEYCODE_Z) && !e.shiftKey && !e.altKey) {\n        e.preventDefault();\n\n        _this._undoEdit();\n      } else if ((isMacLike ? // Trigger redo with ⌘+Shift+Z on Mac\n      e.metaKey && e.keyCode === KEYCODE_Z && e.shiftKey : isWindows ? // Trigger redo with Ctrl+Y on Windows\n      e.ctrlKey && e.keyCode === KEYCODE_Y : // Trigger redo with Ctrl+Shift+Z on other platforms\n      e.ctrlKey && e.keyCode === KEYCODE_Z && e.shiftKey) && !e.altKey) {\n        e.preventDefault();\n\n        _this._redoEdit();\n      } else if (e.keyCode === KEYCODE_M && e.ctrlKey && (isMacLike ? e.shiftKey : true)) {\n        e.preventDefault();\n\n        // Toggle capturing tab key so users can focus away\n        _this.setState(function (state) {\n          return {\n            capture: !state.capture\n          };\n        });\n      }\n    }, _this._handleChange = function (e) {\n      var _e$target2 = e.target,\n          value = _e$target2.value,\n          selectionStart = _e$target2.selectionStart,\n          selectionEnd = _e$target2.selectionEnd;\n\n\n      _this._recordChange({\n        value: value,\n        selectionStart: selectionStart,\n        selectionEnd: selectionEnd\n      }, true);\n\n      _this.props.onValueChange(value);\n    }, _this._history = {\n      stack: [],\n      offset: -1\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Editor, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._recordCurrentState();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          value = _props.value,\n          style = _props.style,\n          padding = _props.padding,\n          highlight = _props.highlight,\n          textareaId = _props.textareaId,\n          autoFocus = _props.autoFocus,\n          disabled = _props.disabled,\n          form = _props.form,\n          maxLength = _props.maxLength,\n          minLength = _props.minLength,\n          name = _props.name,\n          placeholder = _props.placeholder,\n          readOnly = _props.readOnly,\n          required = _props.required,\n          onClick = _props.onClick,\n          onFocus = _props.onFocus,\n          onBlur = _props.onBlur,\n          onKeyUp = _props.onKeyUp,\n          onKeyDown = _props.onKeyDown,\n          onValueChange = _props.onValueChange,\n          tabSize = _props.tabSize,\n          insertSpaces = _props.insertSpaces,\n          ignoreTabKey = _props.ignoreTabKey,\n          rest = _objectWithoutProperties(_props, ['value', 'style', 'padding', 'highlight', 'textareaId', 'autoFocus', 'disabled', 'form', 'maxLength', 'minLength', 'name', 'placeholder', 'readOnly', 'required', 'onClick', 'onFocus', 'onBlur', 'onKeyUp', 'onKeyDown', 'onValueChange', 'tabSize', 'insertSpaces', 'ignoreTabKey']);\n\n      var contentStyle = {\n        paddingTop: padding,\n        paddingRight: padding,\n        paddingBottom: padding,\n        paddingLeft: padding\n      };\n\n      var highlighted = highlight(value);\n\n      return React.createElement(\n        'div',\n        _extends({}, rest, { style: _extends({}, styles.container, style) }),\n        React.createElement('textarea', {\n          ref: function ref(c) {\n            return _this2._input = c;\n          },\n          style: _extends({}, styles.editor, styles.textarea, contentStyle),\n          className: className,\n          id: textareaId,\n          value: value,\n          onChange: this._handleChange,\n          onKeyDown: this._handleKeyDown,\n          onClick: onClick,\n          onKeyUp: onKeyUp,\n          onFocus: onFocus,\n          onBlur: onBlur,\n          disabled: disabled,\n          form: form,\n          maxLength: maxLength,\n          minLength: minLength,\n          name: name,\n          placeholder: placeholder,\n          readOnly: readOnly,\n          required: required,\n          autoFocus: autoFocus,\n          autoCapitalize: 'off',\n          autoComplete: 'off',\n          autoCorrect: 'off',\n          spellCheck: false,\n          'data-gramm': false\n        }),\n        React.createElement('pre', _extends({\n          'aria-hidden': 'true',\n          style: _extends({}, styles.editor, styles.highlight, contentStyle)\n        }, typeof highlighted === 'string' ? { dangerouslySetInnerHTML: { __html: highlighted + '<br />' } } : { children: highlighted })),\n        React.createElement('style', { type: 'text/css', dangerouslySetInnerHTML: { __html: cssText } })\n      );\n    }\n  }, {\n    key: 'session',\n    get: function get() {\n      return {\n        history: this._history\n      };\n    },\n    set: function set(session) {\n      this._history = session.history;\n    }\n  }]);\n\n  return Editor;\n}(React.Component);\n\nEditor.defaultProps = {\n  tabSize: 2,\n  insertSpaces: true,\n  ignoreTabKey: false,\n  padding: 0\n};\nexports.default = Editor;\n\n\nvar styles = {\n  container: {\n    position: 'relative',\n    textAlign: 'left',\n    whiteSpace: 'pre-wrap',\n    wordBreak: 'keep-all',\n    boxSizing: 'border-box',\n    padding: 0\n  },\n  textarea: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100%',\n    width: '100%',\n    margin: 0,\n    border: 0,\n    resize: 'none',\n    background: 'none',\n    overflow: 'hidden',\n    color: 'inherit',\n    MozOsxFontSmoothing: 'grayscale',\n    WebkitFontSmoothing: 'antialiased',\n    WebkitTextFillColor: 'transparent'\n  },\n  highlight: {\n    position: 'relative',\n    margin: 0,\n    border: 0,\n    pointerEvents: 'none'\n  },\n  editor: {\n    boxSizing: 'inherit',\n    display: 'inherit',\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    fontStyle: 'inherit',\n    fontVariantLigatures: 'inherit',\n    fontWeight: 'inherit',\n    letterSpacing: 'inherit',\n    lineHeight: 'inherit',\n    tabSize: 'inherit',\n    textIndent: 'inherit',\n    textRendering: 'inherit',\n    textTransform: 'inherit',\n    whiteSpace: 'inherit',\n    wordBreak: 'inherit'\n  }\n};\n//# sourceMappingURL=index.js.map","import React, { useEffect, useReducer, useCallback, useRef } from 'react'\nimport Editor from 'react-simple-code-editor'\n\nfunction getLineNumber(codeString, selectionStart) {\n  return codeString.substring(0, selectionStart).split('\\n').length\n}\n\nfunction getSelectionState(editorElement) {\n  return {\n    end: editorElement.selectionEnd,\n    start: editorElement.selectionStart,\n  }\n}\n\nfunction createReducer(options) {\n  return function reducer(state, action) {\n    switch (action.type) {\n      case 'EDIT': {\n        return {\n          ...state,\n          code: action.payload,\n        }\n      }\n      case 'COMMENT_LINE': {\n        const { lineNumber, selectionState } = action.payload\n        let didRemoveComment = false\n        let newCode = state.code\n          .split('\\n')\n          .reduce((newCode, line, lineIndex) => {\n            if (lineIndex + 1 === lineNumber) {\n              // @TODO use block comments if within render method\n              // Probably requires some kind of jsx and/or look[ahead / behind] searching\n              if (line.startsWith('// ')) {\n                didRemoveComment = true\n              }\n              return [\n                ...newCode,\n                line.startsWith('// ') ? line.split('// ')[1] : `// ${line}`,\n              ]\n            }\n            return [...newCode, line]\n          }, [])\n          .join('\\n')\n        return {\n          ...state,\n          selectionState: selectionState,\n          code: newCode,\n          didRemoveComment,\n        }\n      }\n      case 'FORMAT_CODE': {\n        return {\n          ...state,\n          code: options.formatCode(state.code),\n          selectionState: action.payload,\n        }\n      }\n      default:\n        return state\n    }\n  }\n}\n\nfunction ComplexEditor({ initialValue, formatCode, formatOnSave, ...props }) {\n  const [state, dispatch] = useReducer(createReducer({ formatCode }), {\n    code: initialValue,\n    selectionState: { end: 0, start: 0 },\n    didRemoveComment: false,\n  })\n\n  const editorRef = useRef(null)\n\n  const isMacRef = useRef(false)\n\n  useEffect(() => {\n    // Do initial setup of the refs, we use one to store the textarea instance\n    // and another to determine if we are on a mac or not to switch keyboard shortcuts\n    editorRef.current = document.querySelector(\n      '#react-complex-code-editor--element',\n    )\n    isMacRef.current = navigator.userAgent.includes('Mac OS X')\n  }, [])\n\n  useEffect(() => {\n    // set the start and end selection states to the start before\n    // the comment started. This is because we only support single line comments\n    // so we want to restore the cursor to where it was or where it should be\n    // depending on if we are removing the comment or adding it.\n    editorRef.current.selectionEnd = state.didRemoveComment\n      ? state.selectionState.start - 3\n      : state.selectionState.start + 3\n    editorRef.current.selectionStart = state.didRemoveComment\n      ? state.selectionState.start - 3\n      : state.selectionState.start + 3\n  }, [state.selectionState, state.didRemoveComment])\n\n  const handleKeyDown = useCallback(\n    event => {\n      // If the key is a slash and the user is using a mac and holding the \"meta\" (aka command) key\n      // or if the key is a slash and the user is using a pc and holding the control key\n      // then we want to comment out the current line the cursor is on\n      if (\n        (event.key === '/' && isMacRef.current && event.metaKey) ||\n        (event.key === '/' && !isMacRef.current && event.ctrlKey)\n      ) {\n        const selectionState = getSelectionState(editorRef.current)\n        const lineNumber = getLineNumber(state.code, selectionState.start)\n        dispatch({\n          type: 'COMMENT_LINE',\n          payload: {\n            lineNumber,\n            selectionState,\n          },\n        })\n      } else if (\n        // If the formatOnSave is enabled, and the formatCode prop is a function\n        // and if the user is on mac and they pressed command + s\n        // or if the user is on windows and they pressed control + s\n        formatOnSave &&\n        typeof formatCode === 'function' &&\n        ((event.key === 's' && isMacRef.current && event.metaKey) ||\n          (event.key === 's' && !isMacRef.current && event.ctrlKey))\n      ) {\n        const selectionState = getSelectionState(editorRef.current)\n        // prevent default to not show the default save page popup\n        event.preventDefault()\n        dispatch({\n          type: 'FORMAT_CODE',\n          payload: selectionState,\n        })\n      }\n    },\n    [state.code],\n  )\n\n  const onValueChange = useCallback(\n    code => dispatch({ type: 'EDIT', payload: code }),\n    [],\n  )\n\n  return (\n    <Editor\n      {...props}\n      value={state.code}\n      onValueChange={onValueChange}\n      textareaId=\"react-complex-code-editor--element\"\n      onKeyDown={handleKeyDown}\n    />\n  )\n}\n\nexport default ComplexEditor\n"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","React","obj","__esModule","newObj","default","_interopRequireWildcard","_react","_possibleConstructorReturn","self","ReferenceError","KEYCODE_ENTER","KEYCODE_TAB","KEYCODE_BACKSPACE","KEYCODE_Y","KEYCODE_Z","KEYCODE_M","KEYCODE_PARENS","KEYCODE_BRACKETS","KEYCODE_QUOTE","KEYCODE_BACK_QUOTE","HISTORY_LIMIT","HISTORY_TIME_GAP","isWindows","global","test","navigator","platform","isMacLike","className","Editor","_React$Component","_ref","_temp","_this","instance","TypeError","_classCallCheck","this","_len","args","Array","_key","__proto__","getPrototypeOf","apply","concat","state","capture","_recordCurrentState","input","_input","_recordChange","selectionStart","selectionEnd","_getLines","text","position","substring","split","record","overwrite","undefined","_this$_history","_history","stack","offset","slice","count","extras","Math","max","timestamp","Date","now","last","re","previous","pop","match","current","startsWith","push","_updateInput","onValueChange","_applyEdits","_undoEdit","_this$_history2","_redoEdit","_this$_history3","min","_handleKeyDown","e","_this$props","tabSize","insertSpaces","ignoreTabKey","onKeyDown","defaultPrevented","_e$target","tabCharacter","repeat","keyCode","preventDefault","shiftKey","linesBeforeCaret","startLine","endLine","nextValue","map","line","join","_linesBeforeCaret","_startLine","_endLine","_startLineText","updatedSelection","hasSelection","endsWith","_updatedSelection","matches","indent","_updatedSelection2","chars","metaKey","ctrlKey","altKey","setState","_handleChange","_e$target2","subClass","superClass","create","constructor","setPrototypeOf","_inherits","Component","_this2","_props","style","padding","highlight","textareaId","autoFocus","disabled","form","maxLength","minLength","name","placeholder","readOnly","required","onClick","onFocus","onBlur","onKeyUp","rest","keys","indexOf","_objectWithoutProperties","contentStyle","paddingTop","paddingRight","paddingBottom","paddingLeft","highlighted","createElement","styles","container","ref","c","editor","textarea","id","onChange","autoCapitalize","autoComplete","autoCorrect","spellCheck","data-gramm","aria-hidden","dangerouslySetInnerHTML","__html","children","type","get","history","set","session","defaultProps","textAlign","whiteSpace","wordBreak","boxSizing","top","left","height","width","margin","border","resize","background","overflow","color","MozOsxFontSmoothing","WebkitFontSmoothing","WebkitTextFillColor","pointerEvents","display","fontFamily","fontSize","fontStyle","fontVariantLigatures","fontWeight","letterSpacing","lineHeight","textIndent","textRendering","textTransform","getSelectionState","editorElement","end","start","options","useReducer","formatCode","action","code","payload","didRemoveComment","newCode","reduce","lineIndex","lineNumber","selectionState","initialValue","editorRef","useRef","isMacRef","useEffect","document","querySelector","userAgent","includes","handleKeyDown","useCallback","event","dispatch","formatOnSave"],"mappings":"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"}